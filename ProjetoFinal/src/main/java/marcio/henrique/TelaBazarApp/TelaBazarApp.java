package marcio.henrique.TelaBazarApp;

import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import marcio.henrique.ProjetoFinal.Entities.Carrinho;
import marcio.henrique.ProjetoFinal.Entities.Clientes;
import marcio.henrique.ProjetoFinal.Entities.Produtos;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestClientException;
import org.springframework.web.client.RestTemplate;

/**
 *
 * @author Marcio Martini
 */
public class TelaBazarApp extends javax.swing.JFrame {
    private final String WS_URL = "http://localhost:8080/produtos";
    private final String WS_URL2 = "http://localhost:8080/clientes";
    private final String WS_URL3 = "http://localhost:8080/carrinho";
    
    public void carregarDadosTabelaProduto() {
        RestTemplate restTemplate = new RestTemplate();
        
        ResponseEntity<Produtos[]> response = 
            restTemplate.getForEntity(WS_URL, Produtos[].class);
        Produtos[] produtos = response.getBody();
        
        DefaultTableModel tabelaProdutos = (DefaultTableModel) tblProdutosCadastrados.getModel();
        
        tabelaProdutos.setNumRows(0);
        
        for(Produtos produto : produtos) {
            Object[] row = {produto.getId(), produto.getProdutos(), produto.getQuantidade(), produto.getValor()};
            tabelaProdutos.addRow(row);
        }  
    }
    
    public void carregarDadosClienteTabela() {
        RestTemplate restTemplate = new RestTemplate();
        
        ResponseEntity<Clientes[]> response = 
            restTemplate.getForEntity(WS_URL2, Clientes[].class);
        Clientes[] clientes = response.getBody();
        
        DefaultTableModel tabelaCliente = (DefaultTableModel) tblClientesCadastrados.getModel();
        
        tabelaCliente.setNumRows(0);
        
        for(Clientes cliente : clientes) {
            Object[] row = {cliente.getId(), cliente.getNome(), cliente.getRg(), cliente.getCpf()};
            tabelaCliente.addRow(row);
        }  
    }
    
//    public void carregarDadosCarrinhoTabela() {
//        RestTemplate restTemplate = new RestTemplate();
//        
//        ResponseEntity<Carrinho[]> response = 
//            restTemplate.getForEntity(WS_URL3, Carrinho[].class);
//        Carrinho[] carrinhos = response.getBody();
//        
//        DefaultTableModel tabelaCarrinho = (DefaultTableModel) tblCarrinho.getModel();
//        
//        tabelaCarrinho.setNumRows(0);
//        
//        for(Carrinho carrinho : carrinhos) {
//            Object[] row = {carrinho.getId(), carrinho.getProduto(), carrinho.getQuantidade(), carrinho.getValor()};
//            tabelaCarrinho.addRow(row);
//        }  
//    }
    
    NotaFiscal enviaTexto;
    Total valorCompra;
    
    public TelaBazarApp() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        edtNomeCliente = new javax.swing.JTextField();
        edtCpfCliente = new javax.swing.JTextField();
        edtRgCliente = new javax.swing.JTextField();
        btnCadastrarCliente = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        edtProdutoCadastroProduto = new javax.swing.JTextField();
        edtQuantidadeCadastroProduto = new javax.swing.JTextField();
        edtValorCadastroProduto = new javax.swing.JTextField();
        btnCadastrarProduto = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnAdicionarCarrinho = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCarrinho = new javax.swing.JTable();
        btnFinalizarCompra = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        edtValorTotal = new javax.swing.JTextField();
        btnRemoverCarrinho = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientesCadastrados = new javax.swing.JTable();
        btnRemoverCliente = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProdutosCadastrados = new javax.swing.JTable();
        btnRemoverProduto = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        btnMaiorCompra = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastrar Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLabel1.setText("Nome:");

        jLabel2.setText("CPF:");

        jLabel3.setText("RG:");

        btnCadastrarCliente.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCadastrarCliente.setText("Cadastrar");
        btnCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(edtNomeCliente)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 334, Short.MAX_VALUE))
                    .addComponent(edtCpfCliente)
                    .addComponent(edtRgCliente))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCadastrarCliente)
                .addGap(133, 133, 133))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addComponent(edtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtRgCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(btnCadastrarCliente)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastrar Produto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLabel5.setText("Produto:");

        jLabel6.setText("Quantidade:");

        jLabel7.setText("Valor (R$):");

        btnCadastrarProduto.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCadastrarProduto.setText("Cadastrar");
        btnCadastrarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(edtValorCadastroProduto)
                            .addComponent(edtQuantidadeCadastroProduto)
                            .addComponent(edtProdutoCadastroProduto)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(btnCadastrarProduto)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtProdutoCadastroProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtQuantidadeCadastroProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtValorCadastroProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCadastrarProduto)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Carrinho", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        btnAdicionarCarrinho.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdicionarCarrinho.setText("ADICIONAR AO CARRINHO");
        btnAdicionarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarCarrinhoActionPerformed(evt);
            }
        });

        tblCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Produto", "Quantidade", "Valor (R$)"
            }
        ));
        jScrollPane3.setViewportView(tblCarrinho);

        btnFinalizarCompra.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnFinalizarCompra.setForeground(new java.awt.Color(0, 204, 51));
        btnFinalizarCompra.setText("FINALIZAR COMPRA");
        btnFinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarCompraActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("VALOR TOTAL: R$");

        edtValorTotal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        edtValorTotal.setText("00,00");
        edtValorTotal.setBorder(null);

        btnRemoverCarrinho.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnRemoverCarrinho.setForeground(new java.awt.Color(242, 19, 19));
        btnRemoverCarrinho.setText("REMOVER DO CARRINHO");
        btnRemoverCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverCarrinhoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(btnAdicionarCarrinho, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addGap(51, 51, 51))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoverCarrinho, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnFinalizarCompra)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdicionarCarrinho)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoverCarrinho)
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(edtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnFinalizarCompra)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clientes Cadastrados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        tblClientesCadastrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID ", "Cliente", "CPF", "RG"
            }
        ));
        jScrollPane1.setViewportView(tblClientesCadastrados);

        btnRemoverCliente.setBackground(new java.awt.Color(255, 255, 241));
        btnRemoverCliente.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnRemoverCliente.setForeground(new java.awt.Color(242, 19, 19));
        btnRemoverCliente.setText("REMOVER CLIENTE");
        btnRemoverCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoverCliente))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoverCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Produtos Cadastrados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        tblProdutosCadastrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Produto", "Quantidade", "Valor (R$)"
            }
        ));
        jScrollPane2.setViewportView(tblProdutosCadastrados);

        btnRemoverProduto.setBackground(new java.awt.Color(255, 255, 241));
        btnRemoverProduto.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnRemoverProduto.setForeground(new java.awt.Color(242, 19, 19));
        btnRemoverProduto.setText("REMOVER PRODUTO");
        btnRemoverProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRemoverProduto)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoverProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenuBar1.setBackground(new java.awt.Color(204, 255, 204));

        jMenu2.setText("RELAÇÃO-COMPRAS");

        btnMaiorCompra.setText("VIZUALIZAR");
        btnMaiorCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaiorCompraActionPerformed(evt);
            }
        });
        jMenu2.add(btnMaiorCompra);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarClienteActionPerformed
        
        try {
            
            String nome = edtNomeCliente.getText();
            
            if (nome.isEmpty()) {
                
                JOptionPane.showMessageDialog(this, "Nome inválido! Campo Nome está vazio.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
            }
                                                                                
        }catch(NullPointerException pn) {
                       
        }
        
        try {
            
            String cpf = edtCpfCliente.getText();
            
            if (cpf.isEmpty()) {
                
                JOptionPane.showMessageDialog(this, "CPF inválido! Campo CPF está vazio.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(!cpf.matches("\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}")) {
                                              
                JOptionPane.showMessageDialog(this, "CPF inválido. Insira um CPF válido no formato XXX.XXX.XXX-XX.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
                
            }
            
        }catch(NullPointerException cpfe) {
            
        }
        
        try {
            
            String rg = edtRgCliente.getText();
            
            if (rg.isEmpty()) {
                
                JOptionPane.showMessageDialog(this, "RG inválido! Campo RG está vazio.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(!rg.matches("\\d{2}\\.\\d{3}\\-\\d{2}")) {
                                              
                JOptionPane.showMessageDialog(this, "RG inválido. Insira um RG válido no formato XX.XXX-XX.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
                
            }
            
        }catch(NullPointerException rge) {
            
        }
                               
        
        String nome = edtNomeCliente.getText();
        String cpf = edtCpfCliente.getText();
        String rg = edtRgCliente.getText();
        
                
        //Integer cpfConvert = Integer.valueOf(cpf);
        //Integer rgConvert = Integer.valueOf(rg);
        
        Clientes c = new Clientes();
        
        c.setNome(nome);
        c.setCpf(cpf);
        c.setRg(rg);
        
        try {
            RestTemplate restTemplate = new RestTemplate();
            
            restTemplate.postForObject(WS_URL2, c, Clientes.class);
            
            JOptionPane.showMessageDialog(this, "Cliente salvo com sucesso!");
            
            
        } catch (RestClientException e) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar cliente!");
        }
       
        carregarDadosClienteTabela();     
               
        
//        DefaultTableModel tabelaCliente = (DefaultTableModel) tblClientesCadastrados.getModel();
//        
//        Object[] novoCliente = new Object[] {
//            nome,
//            cpf,
//            rg,
//        };
//        
//        tabelaCliente.addRow(novoCliente);
        
        //JOptionPane.showMessageDialog(this, "Cliente Cadastrado com Sucesso!");
        
        // limpar campos
        
        edtNomeCliente.setText("");
        edtCpfCliente.setText("");
        edtRgCliente.setText("");
        
    }//GEN-LAST:event_btnCadastrarClienteActionPerformed

    private void btnCadastrarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarProdutoActionPerformed
        
        try {
            
            String produto = edtProdutoCadastroProduto.getText();
            
            if (produto.isEmpty()) {
                
                JOptionPane.showMessageDialog(this, "Produto inválido! Campo Produto está vazio.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
            }
                                                                                
        }catch(NullPointerException pe) {
                       
        }
        
        try {
            
            String quantidade = edtQuantidadeCadastroProduto.getText();
            
            if (quantidade.isEmpty()) {
                
                JOptionPane.showMessageDialog(this, "Quantidade inválida! Campo Quantidade está vazio.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            int quantidadeException = Integer.parseInt(quantidade);
            
            if (quantidadeException <= 0) {
                JOptionPane.showMessageDialog(this, "Quantidade inválida! Quantidade aceita apenas números inteiros positivos.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
    }
            
        }catch(NumberFormatException  | NullPointerException qe) {
            
            JOptionPane.showMessageDialog(this, "Quantidade inválida! Quantidade aceita apenas números inteiros positivos.", "Erro!", 0);
            
        }
        
        try {
            
            String valor = edtValorCadastroProduto.getText();
            
            if (valor.isEmpty()) {
                
                JOptionPane.showMessageDialog(this, "Valor inválido! Campo Valor está vazio.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            double valorException = Double.parseDouble(valor); 
            
            if (valorException <= 0) {
                JOptionPane.showMessageDialog(this, "Valor inválido! Campo Valor aceita apenas números reais positivos.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }catch(NumberFormatException ve) {
            
            JOptionPane.showMessageDialog(this, "Valor inválido! Campo Valor aceita apenas números reais positivos.", "Erro!", 0);
        }
                               
        
        String produto = edtProdutoCadastroProduto.getText();
        String valor = edtValorCadastroProduto.getText();
        String quantidade = edtQuantidadeCadastroProduto.getText();
        
        Integer qtdeConvert = Integer.valueOf(quantidade);
        Double valConvert = Double.valueOf(valor);
        
        Produtos p = new Produtos();
        
        p.setProdutos(produto);
        p.setQuantidade(qtdeConvert);
        p.setValor(valConvert);
        
        try {
            RestTemplate restTemplate = new RestTemplate();
            
            restTemplate.postForObject(WS_URL, p, Produtos.class);
            
            JOptionPane.showMessageDialog(this, "Produto salvo com sucesso!");
            
            
        } catch (RestClientException e) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar produto!");
        }
        
        carregarDadosTabelaProduto();
        
        
//        DefaultTableModel tabelaProduto = (DefaultTableModel) tblProdutosCadastrados.getModel();
//        
//        Object[] novoProduto = new Object[] {
//            codigo,
//            produto,
//            quantidade,
//            valor
//        };
//        
//        tabelaProduto.addRow(novoProduto);
        
        // limpar campos
        
        //edtCodigoCadastroProduto.setText(""); Não está sendo usado
        edtProdutoCadastroProduto.setText("");
        edtValorCadastroProduto.setText("");
        edtQuantidadeCadastroProduto.setText("");
    
    }//GEN-LAST:event_btnCadastrarProdutoActionPerformed

    private void btnMaiorCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaiorCompraActionPerformed
        Total totalDia = new Total();
        totalDia.setVisible(true);
    }//GEN-LAST:event_btnMaiorCompraActionPerformed

    private void btnFinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarCompraActionPerformed
        // TODO add your handling code here:
        String[] opcoes = {"Cartão de Débito", "Cartão Crédito", "Pix", "Dinheiro"};

        int resposta = JOptionPane.showOptionDialog(null, "Selecione uma opção:", "Forma de Pagamento",

            JOptionPane.DEFAULT_OPTION,
            JOptionPane.PLAIN_MESSAGE,null,opcoes,opcoes[0]);

        String opcaoSelecionada = opcoes[resposta];

        if (resposta >= 0){
            System.out.println("Opção selecionada: "+ opcaoSelecionada);
        }
        //        Total novo = new Total();
        //        novo.adicionarValor(total);
        //        novo.adicionarValor(2.5);
        //        novo.adicionarValor(10.0);

        //PASSAGEM DE VARIÁVEIS PARA OUTRA JANELA
        int linhaSelecionada = tblClientesCadastrados.getSelectedRow();

        if(enviaTexto == null){
            enviaTexto = new NotaFiscal();
            enviaTexto.setVisible(true);
            enviaTexto.recebendoTotal(edtValorTotal.getText());
            enviaTexto.recebendoNome(tblClientesCadastrados.getValueAt(linhaSelecionada,1).toString());
            enviaTexto.recebendoFormaPagamento(opcaoSelecionada);

            String codigo, produto, quantidade, valor;
            for (int i = 0; i <= tblCarrinho.getRowCount(); i++) {
                codigo = tblCarrinho.getValueAt(i,0).toString();

                produto = tblCarrinho.getValueAt(i,1).toString();

                quantidade = tblCarrinho.getValueAt(i,2).toString();

                valor = tblCarrinho.getValueAt(i,3).toString();

                Object[] novoProduto = new Object[] {
                    codigo,
                    produto,
                    quantidade,
                    valor
                };

                enviaTexto.recebendoTabela (novoProduto);
                DefaultTableModel tabelaProdutos = (DefaultTableModel) tblCarrinho.getModel ();
                tabelaProdutos.setRowCount (0) ;
                tblCarrinho.repaint () ;
                
            }
        }else{
            enviaTexto.setVisible(true);
            enviaTexto.setState(NotaFiscal.NORMAL);
            enviaTexto.recebendoTotal(edtValorTotal.getText());
            enviaTexto.recebendoNome(tblClientesCadastrados.getValueAt(linhaSelecionada,1).toString());
            enviaTexto.recebendoFormaPagamento(opcaoSelecionada);
            String codigo, produto, quantidade, valor;
            for (int i = 0; i <= tblCarrinho.getRowCount(); i++) {
                codigo = tblCarrinho.getValueAt(i,0).toString();

                produto = tblCarrinho.getValueAt(i,1).toString();

                quantidade = tblCarrinho.getValueAt(i,2).toString();

                valor = tblCarrinho.getValueAt(i,3).toString();

                Object[] novoProduto = new Object[] {
                    codigo,
                    produto,
                    quantidade,
                    valor
                };
                
                DefaultTableModel tabelaProdutos = (DefaultTableModel) tblCarrinho.getModel ();
                tabelaProdutos.setRowCount (0) ;
                tblCarrinho.repaint ();

                }
        }

        //        if(valorCompra == null){
            //            valorCompra = new Total();
            //            valorCompra.adicionarValor((edtValorTotal.getText()));
            //        }
        //        else{
            //            valorCompra.setState(Total.NORMAL);
            //            valorCompra.adicionarValor((edtValorTotal.getText()));
            //        }

    }//GEN-LAST:event_btnFinalizarCompraActionPerformed

    private void btnAdicionarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarCarrinhoActionPerformed
                
        DefaultTableModel tabelaProduto  = (DefaultTableModel) tblCarrinho.getModel();

        int linhaSelecionada = tblProdutosCadastrados.getSelectedRow();

        String codigo, produto, quantidade, valor;

        quantidade = JOptionPane.showInputDialog(this,"Informe a quantidade: ", "QUANTIDADE",3);

        int w = Integer.parseInt(quantidade);

        String x = tblProdutosCadastrados.getValueAt(linhaSelecionada,2).toString();

        int quantidadeAnterior = Integer.parseInt(x);

        if(quantidadeAnterior<w  || w <= 0){
            JOptionPane.showMessageDialog(this,"Não há estoque suficiente", "Erro!",0);
        }
        else{
            int y = quantidadeAnterior - w;

            String quantidadeAtual = String.valueOf(y);

            tblProdutosCadastrados.setValueAt(quantidadeAtual,linhaSelecionada,2);

            codigo = tblProdutosCadastrados.getValueAt(linhaSelecionada,0).toString();

            produto = tblProdutosCadastrados.getValueAt(linhaSelecionada,1).toString();

            valor = tblProdutosCadastrados.getValueAt(linhaSelecionada,3).toString();

            double total = Double.valueOf(valor) * Double.valueOf(quantidade);

            Object[] novoProduto = new Object[] {
                codigo,
                produto,
                quantidade,
                total
            };

            tabelaProduto.addRow(novoProduto);
            Total.somar(total);

            String valorFinal = String.valueOf(Total.getSomaArmazenada());
            edtValorTotal.setText(valorFinal);
            
            
        }
        
        
    }//GEN-LAST:event_btnAdicionarCarrinhoActionPerformed

    private void btnRemoverClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverClienteActionPerformed
        
        int rows[] = tblClientesCadastrados.getSelectedRows();
        
        if (rows.length == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum cliente selecionado.", "Atenção", 2);
            return;
        }
        
        for (int row : rows) {
            RestTemplate restTemplate = new RestTemplate();
            Long id = (Long) tblClientesCadastrados.getModel().getValueAt(row, 0);
            restTemplate.delete(WS_URL2 + "/" + id);
        }
        
        carregarDadosClienteTabela();
        JOptionPane.showMessageDialog(this, "Cliente removido com sucesso!");
    }//GEN-LAST:event_btnRemoverClienteActionPerformed

    private void btnRemoverProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverProdutoActionPerformed
        int rows[] = tblProdutosCadastrados.getSelectedRows();
        
        if (rows.length == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum produto selecionado.", "Atenção", 2);
            return;
        }
        
        for (int row : rows) {
            RestTemplate restTemplate = new RestTemplate();
            Long id = (Long) tblProdutosCadastrados.getModel().getValueAt(row, 0);
            restTemplate.delete(WS_URL + "/" + id);
        }
        
        carregarDadosTabelaProduto();
        JOptionPane.showMessageDialog(this, "Produto removido com sucesso!");
    }//GEN-LAST:event_btnRemoverProdutoActionPerformed

    private void btnRemoverCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverCarrinhoActionPerformed
        int rowSelecionada = tblCarrinho.getSelectedRow();
        
        if(rowSelecionada == -1) {
            JOptionPane.showMessageDialog(this, "Nenhum item selecionado.", "Atenção", 2);
        }
        else {
            DefaultTableModel tabelaCarrinho = (DefaultTableModel) tblCarrinho.getModel();
            tabelaCarrinho.removeRow(rowSelecionada);
            JOptionPane.showMessageDialog(this, "Item removido com sucesso!","", 1);
        }
    }//GEN-LAST:event_btnRemoverCarrinhoActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(
       javax.swing.UIManager.getSystemLookAndFeelClassName());
            
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | 
                javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaBazarApp.class.getName()).log(
            java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //TelaBazarApp chama = new TelaBazarApp();
        //chama.carregarDadosTabela();
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaBazarApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarCarrinho;
    private javax.swing.JButton btnCadastrarCliente;
    private javax.swing.JButton btnCadastrarProduto;
    private javax.swing.JButton btnFinalizarCompra;
    private javax.swing.JMenuItem btnMaiorCompra;
    private javax.swing.JButton btnRemoverCarrinho;
    private javax.swing.JButton btnRemoverCliente;
    private javax.swing.JButton btnRemoverProduto;
    private javax.swing.JTextField edtCpfCliente;
    private javax.swing.JTextField edtNomeCliente;
    private javax.swing.JTextField edtProdutoCadastroProduto;
    private javax.swing.JTextField edtQuantidadeCadastroProduto;
    private javax.swing.JTextField edtRgCliente;
    private javax.swing.JTextField edtValorCadastroProduto;
    private javax.swing.JTextField edtValorTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblCarrinho;
    private javax.swing.JTable tblClientesCadastrados;
    private javax.swing.JTable tblProdutosCadastrados;
    // End of variables declaration//GEN-END:variables
}

